-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-03-07 16:20:38 EET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE CLUSTER cl_zaideju_dalyvavimai(zaidejai_id NUMBER);
CREATE INDEX ci_zaideju_dalyvavimai ON CLUSTER cl_zaideju_dalyvavimai;

CREATE TABLE dalyvavimai (
    rezultatas       VARCHAR2(20 CHAR),
    dalyvavimai_id   NUMBER NOT NULL,
    zaidejai_id      NUMBER NOT NULL,
    gyvi_zaidimai_id NUMBER NOT NULL
) CLUSTER cl_zaideju_dalyvavimai ( zaidejai_id );

ALTER TABLE dalyvavimai ADD CONSTRAINT dalyvavimai_pk PRIMARY KEY ( dalyvavimai_id );

CREATE TABLE darbo_sutartys (
    darbdavio_pavadinimas         VARCHAR2(30 CHAR),
    registruotas_buveines_adresas VARCHAR2(30 CHAR),
    tel_nr                        VARCHAR2(15 CHAR),
    el_pastas                     VARCHAR2(30 CHAR),
    vardas                        VARCHAR2(20 CHAR),
    pavarde                       VARCHAR2(20 CHAR),
    tapatybes_korteles_nr         VARCHAR2(20 CHAR),
    darbo_apibudinimas            VARCHAR2(20 CHAR),
    darbo_uzmokestis              NUMBER(8, 2),
    darbo_sutarties_rusis         VARCHAR2(20 CHAR),
    salygos                       VARCHAR2(50 CHAR),
    galioja_nuo                   DATE,
    galioja_iki                   DATE,
    darbo_sutartys_id             NUMBER NOT NULL,
    darbuotojai_id                NUMBER NOT NULL,
    punktai_id                    NUMBER NOT NULL
);

ALTER TABLE darbo_sutartys ADD CONSTRAINT darbo_sutartys_pk PRIMARY KEY ( darbo_sutartys_id );

CREATE TABLE darbuotojai (
    lytis          VARCHAR2(20 CHAR),
    gim_data       DATE,
    asmens_kodas   VARCHAR2(20 CHAR),
    pobudis        VARCHAR2(20 CHAR),
    vardas         VARCHAR2(20 CHAR),
    pavarde        VARCHAR2(20 CHAR),
    el_pastas      VARCHAR2(20 CHAR),
    tel_nr         VARCHAR2(20 CHAR),
    darbuotojai_id NUMBER NOT NULL
);

ALTER TABLE darbuotojai ADD CONSTRAINT darbuotojai_pk PRIMARY KEY ( darbuotojai_id );

CREATE TABLE gyvi_zaidimai (
    pradzios_data_laikas DATE,
    pabaigos_data_laikas DATE,
    pobudis              VARCHAR2(20 CHAR),
    zaideju_skaicius     NUMBER(8),
    gyvi_zaidimai_id     NUMBER NOT NULL,
    darbuotojai_id       NUMBER,
    punktai_id           NUMBER NOT NULL,
    zaidimai_id          NUMBER NOT NULL
);

ALTER TABLE gyvi_zaidimai ADD CONSTRAINT gyvi_zaidimai_pk PRIMARY KEY ( gyvi_zaidimai_id );

CREATE TABLE miestai (
    pavadinimas        VARCHAR2(20 CHAR),
    gyventoju_skaicius NUMBER(8),
    miestai_id         NUMBER NOT NULL,
    valstybes_id       NUMBER NOT NULL
);

ALTER TABLE miestai ADD CONSTRAINT miestai_pk PRIMARY KEY ( miestai_id );

CREATE TABLE punktai (
    apsilankymas VARCHAR2(20 CHAR),
    vieta        VARCHAR2(20 CHAR),
    tel_nr       VARCHAR2(20 CHAR),
    tipas        VARCHAR2(20 CHAR),
    punktai_id   NUMBER NOT NULL,
    miestai_id   NUMBER NOT NULL
);

ALTER TABLE punktai ADD CONSTRAINT punktai_pk PRIMARY KEY ( punktai_id );

CREATE TABLE valstybes (
    pavadinimas        VARCHAR2(20 CHAR),
    gyventoju_skaicius NUMBER(9),
    sostine            VARCHAR2(20 CHAR),
    valstybes_id       NUMBER NOT NULL
);

ALTER TABLE valstybes ADD CONSTRAINT valstybes_pk PRIMARY KEY ( valstybes_id );

CREATE TABLE zaidejai (
    lytis        VARCHAR2(20 CHAR),
    gimimo_data  DATE,
    asmens_kodas VARCHAR2(15 CHAR),
    vardas       VARCHAR2(15 CHAR),
    pavarde      VARCHAR2(15 CHAR),
    el_pastas    VARCHAR2(30 CHAR),
    tel_nr       VARCHAR2(12 CHAR),
    zaidejai_id  NUMBER NOT NULL
) CLUSTER cl_zaideju_dalyvavimai ( zaidejai_id );

ALTER TABLE zaidejai ADD CONSTRAINT zaidejai_pk PRIMARY KEY ( zaidejai_id );

CREATE TABLE zaidimai (
    pavadinimas VARCHAR2(20 CHAR),
    pobudis     VARCHAR2(20 CHAR),
    max_zaideju NUMBER(2),
    zaidimai_id NUMBER NOT NULL
);

ALTER TABLE zaidimai ADD CONSTRAINT zaidimai_pk PRIMARY KEY ( zaidimai_id );

ALTER TABLE dalyvavimai
    ADD CONSTRAINT dalyvavimai_gyvi_zaidimai_fk FOREIGN KEY ( gyvi_zaidimai_id )
        REFERENCES gyvi_zaidimai ( gyvi_zaidimai_id );

ALTER TABLE dalyvavimai
    ADD CONSTRAINT dalyvavimai_zaidejai_fk FOREIGN KEY ( zaidejai_id )
        REFERENCES zaidejai ( zaidejai_id );

ALTER TABLE darbo_sutartys
    ADD CONSTRAINT darbo_sutartys_darbuotojai_fk FOREIGN KEY ( darbuotojai_id )
        REFERENCES darbuotojai ( darbuotojai_id );

ALTER TABLE darbo_sutartys
    ADD CONSTRAINT darbo_sutartys_punktai_fk FOREIGN KEY ( punktai_id )
        REFERENCES punktai ( punktai_id );

ALTER TABLE gyvi_zaidimai
    ADD CONSTRAINT gyvi_zaidimai_darbuotojai_fk FOREIGN KEY ( darbuotojai_id )
        REFERENCES darbuotojai ( darbuotojai_id );

ALTER TABLE gyvi_zaidimai
    ADD CONSTRAINT gyvi_zaidimai_punktai_fk FOREIGN KEY ( punktai_id )
        REFERENCES punktai ( punktai_id );

ALTER TABLE gyvi_zaidimai
    ADD CONSTRAINT gyvi_zaidimai_zaidimai_fk FOREIGN KEY ( zaidimai_id )
        REFERENCES zaidimai ( zaidimai_id );

ALTER TABLE miestai
    ADD CONSTRAINT miestai_valstybes_fk FOREIGN KEY ( valstybes_id )
        REFERENCES valstybes ( valstybes_id );

ALTER TABLE punktai
    ADD CONSTRAINT punktai_miestai_fk FOREIGN KEY ( miestai_id )
        REFERENCES miestai ( miestai_id );

CREATE SEQUENCE dalyvavimai_dalyvavimai_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dalyvavimai_dalyvavimai_id_trg BEFORE
    INSERT ON dalyvavimai
    FOR EACH ROW
    WHEN ( new.dalyvavimai_id IS NULL )
BEGIN
    :new.dalyvavimai_id := dalyvavimai_dalyvavimai_id_seq.nextval;
END;
/

CREATE SEQUENCE darbo_sutartys_darbo_sutartys_ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER darbo_sutartys_darbo_sutartys_ BEFORE
    INSERT ON darbo_sutartys
    FOR EACH ROW
    WHEN ( new.darbo_sutartys_id IS NULL )
BEGIN
    :new.darbo_sutartys_id := darbo_sutartys_darbo_sutartys_.nextval;
END;
/

CREATE SEQUENCE darbuotojai_darbuotojai_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER darbuotojai_darbuotojai_id_trg BEFORE
    INSERT ON darbuotojai
    FOR EACH ROW
    WHEN ( new.darbuotojai_id IS NULL )
BEGIN
    :new.darbuotojai_id := darbuotojai_darbuotojai_id_seq.nextval;
END;
/

CREATE SEQUENCE gyvi_zaidimai_gyvi_zaidimai_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER gyvi_zaidimai_gyvi_zaidimai_id BEFORE
    INSERT ON gyvi_zaidimai
    FOR EACH ROW
    WHEN ( new.gyvi_zaidimai_id IS NULL )
BEGIN
    :new.gyvi_zaidimai_id := gyvi_zaidimai_gyvi_zaidimai_id.nextval;
END;
/

CREATE SEQUENCE miestai_miestai_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER miestai_miestai_id_trg BEFORE
    INSERT ON miestai
    FOR EACH ROW
    WHEN ( new.miestai_id IS NULL )
BEGIN
    :new.miestai_id := miestai_miestai_id_seq.nextval;
END;
/

CREATE SEQUENCE punktai_punktai_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER punktai_punktai_id_trg BEFORE
    INSERT ON punktai
    FOR EACH ROW
    WHEN ( new.punktai_id IS NULL )
BEGIN
    :new.punktai_id := punktai_punktai_id_seq.nextval;
END;
/

CREATE SEQUENCE valstybes_valstybes_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER valstybes_valstybes_id_trg BEFORE
    INSERT ON valstybes
    FOR EACH ROW
    WHEN ( new.valstybes_id IS NULL )
BEGIN
    :new.valstybes_id := valstybes_valstybes_id_seq.nextval;
END;
/

CREATE SEQUENCE zaidejai_zaidejai_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zaidejai_zaidejai_id_trg BEFORE
    INSERT ON zaidejai
    FOR EACH ROW
    WHEN ( new.zaidejai_id IS NULL )
BEGIN
    :new.zaidejai_id := zaidejai_zaidejai_id_seq.nextval;
END;
/

CREATE SEQUENCE zaidimai_zaidimai_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zaidimai_zaidimai_id_trg BEFORE
    INSERT ON zaidimai
    FOR EACH ROW
    WHEN ( new.zaidimai_id IS NULL )
BEGIN
    :new.zaidimai_id := zaidimai_zaidimai_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             0
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           9
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          9
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0



CREATE OR REPLACE VIEW iprastajoin (
    vardas,
    pavarde,
    vieta,
    pradzios_data_laikas,
    pabaigos_data_laikas
) AS
    SELECT
        zaidejai.vardas,
        zaidejai.pavarde,
        dalyvavimai.vieta,
        gyvi_zaidimai.pradzios_data_laikas,
        gyvi_zaidimai.pabaigos_data_laikas
    FROM
             dalyvavimai
        INNER JOIN zaidejai ON dalyvavimai.zaidejai_id = zaidejai.zaidejai_id
        INNER JOIN gyvi_zaidimai ON dalyvavimai.gyvi_zaidimai_id = gyvi_zaidimai.gyvi_zaidimai_id
        INNER JOIN punktai ON gyvi_zaidimai.punktai_id = punktai.punktai_id
    WHERE
        dalyvavimai.vieta < 6;

CREATE MATERIALIZED VIEW zaideju_dalyvavimai
    REFRESH
            COMPLETE
            ON DEMAND
ENABLE QUERY REWRITE AS
    SELECT
        dalyvavimai.zaidejai_id,
        AVG(prizas),
        SUM(prizas),
        MIN(prizas),
        MAX(prizas)
    FROM
        dalyvavimai
    GROUP BY
        dalyvavimai.zaidejai_id;


CREATE OR REPLACE VIEW cte (
    zaidejai_id,
    vardas,
    pavarde,
    asmens_kodas,
    vieta,
    pradzios_data,
    pabaigos_data,
    zaideju_sk
) AS
    WITH zaideju_dalyvavimai_cte (
        zaidejai_id,
        vardas,
        pavarde,
        asmens_kodas,
        vieta,
        pradzios_data,
        pabaigos_data,
        zaideju_sk
    ) AS (
        SELECT DISTINCT
            zaidejai.zaidejai_id,
            zaidejai.vardas,
            zaidejai.pavarde,
            zaidejai.asmens_kodas,
            dalyvavimai.vieta,
            gyvi_zaidimai.pradzios_data_laikas,
            gyvi_zaidimai.pabaigos_data_laikas,
            gyvi_zaidimai.zaideju_skaicius
        FROM
                 zaidejai
            INNER JOIN dalyvavimai ON dalyvavimai.zaidejai_id = zaidejai.zaidejai_id
            INNER JOIN gyvi_zaidimai ON gyvi_zaidimai.gyvi_zaidimai_id = dalyvavimai.gyvi_zaidimai_id
            INNER JOIN zaidimai ON gyvi_zaidimai.zaidimai_id = zaidimai.zaidimai_id
        WHERE
            gyvi_zaidimai.zaideju_skaicius IN ( 5, 10 )
            AND to_char(gyvi_zaidimai.pabaigos_data_laikas, 'DD') = '16'
            AND dalyvavimai.vieta <= 11
    )
    SELECT
        zaideju_dalyvavimai_cte.zaidejai_id,
        zaideju_dalyvavimai_cte.vardas,
        zaideju_dalyvavimai_cte.pavarde,
        zaideju_dalyvavimai_cte.asmens_kodas,
        zaideju_dalyvavimai_cte.vieta,
        zaideju_dalyvavimai_cte.pradzios_data,
        zaideju_dalyvavimai_cte.pabaigos_data,
        zaideju_dalyvavimai_cte.zaideju_sk
    FROM
        zaideju_dalyvavimai_cte;



CREATE OR REPLACE VIEW inlineview (
    vardas,
    pavarde,
    vieta,
    pradzios_data_laikas,
    pabaigos_data_laikas
) AS
    SELECT
        zaidejai.vardas,
        zaidejai.pavarde,
        dalyvavimai.vieta,
        t.pradzios_data_laikas,
        t.pabaigos_data_laikas
    FROM
             dalyvavimai
        INNER JOIN zaidejai ON dalyvavimai.zaidejai_id = zaidejai.zaidejai_id
        INNER JOIN (
            SELECT
                gyvi_zaidimai_id,
                pradzios_data_laikas,
                pabaigos_data_laikas
            FROM
                     gyvi_zaidimai
                INNER JOIN punktai ON gyvi_zaidimai.punktai_id = punktai.punktai_id
        ) t ON dalyvavimai.gyvi_zaidimai_id = t.gyvi_zaidimai_id
    WHERE
        dalyvavimai.vieta < 6;